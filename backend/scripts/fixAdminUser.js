import User from '../models/User.js';
import bcrypt from 'bcryptjs';

const fixAdminUser = async () => {
    try {
        console.log('üîß Fixing admin user...');

        // ÿßŸÑÿ®ÿ≠ÿ´ ÿπŸÜ ŸÖÿ≥ÿ™ÿÆÿØŸÖ admin
        const adminUser = await User.findOne({
            where: {
                username: 'admin'
            }
        });

        if (!adminUser) {
            console.log('‚ùå Admin user not found!');
            return;
        }

        console.log('‚úÖ Admin user found:', {
            username: adminUser.username,
            email: adminUser.email,
            role: adminUser.role,
            status: adminUser.status
        });

        // ÿ™ŸÅÿπŸäŸÑ ÿßŸÑŸÖÿ≥ÿ™ÿÆÿØŸÖ ÿ•ÿ∞ÿß ŸÉÿßŸÜ ÿ∫Ÿäÿ± ŸÖŸÅÿπŸÑ
        if (adminUser.status !== 'active') {
            console.log('üîÑ Activating admin user...');
            adminUser.status = 'active';
            await adminUser.save();
            console.log('‚úÖ Admin user activated successfully!');
        } else {
            console.log('‚úÖ Admin user is already active');
        }

        // ÿßŸÑÿ™ÿ≠ŸÇŸÇ ŸÖŸÜ ŸÉŸÑŸÖÿ© ÿßŸÑŸÖÿ±Ÿàÿ± Ÿàÿ•ÿπÿßÿØÿ© ÿ™ÿ¥ŸÅŸäÿ±Ÿáÿß ÿ•ÿ∞ÿß ŸÑÿ≤ŸÖ ÿßŸÑÿ£ŸÖÿ±
        console.log('üîç Testing password...');
        const testPassword = 'admin123';
        const isPasswordValid = await adminUser.comparePassword(testPassword);

        if (!isPasswordValid) {
            console.log('üîÑ Password seems incorrect, resetting...');
            // ÿ•ÿπÿßÿØÿ© ÿ™ÿπŸäŸäŸÜ ŸÉŸÑŸÖÿ© ÿßŸÑŸÖÿ±Ÿàÿ±
            const saltRounds = parseInt(process.env.BCRYPT_SALT_ROUNDS) || 12;
            const hashedPassword = await bcrypt.hash(testPassword, saltRounds);
            adminUser.password = hashedPassword;
            await adminUser.save();
            console.log('‚úÖ Password reset successfully!');
        } else {
            console.log('‚úÖ Password is correct');
        }

        // ÿßÿÆÿ™ÿ®ÿßÿ± ÿ™ÿ≥ÿ¨ŸäŸÑ ÿßŸÑÿØÿÆŸàŸÑ
        console.log('üß™ Testing login...');
        try {
            const loginTest = await User.findByCredentials('admin', testPassword);
            console.log('‚úÖ Login test successful!');
            console.log('üìã User details:', {
                username: loginTest.username,
                email: loginTest.email,
                role: loginTest.role,
                status: loginTest.status
            });
        } catch (error) {
            console.log('‚ùå Login test failed:', error.message);
        }

        console.log('üéâ Admin user fix completed!');

    } catch (error) {
        console.error('‚ùå Error fixing admin user:', error);
    }
};

// ÿ™ÿ¥ÿ∫ŸäŸÑ ÿßŸÑÿ≥ŸÉÿ±Ÿäÿ®ÿ™
fixAdminUser()
    .then(() => {
        console.log('‚úÖ Script completed successfully');
        process.exit(0);
    })
    .catch(error => {
        console.error('‚ùå Script failed:', error);
        process.exit(1);
    }); 